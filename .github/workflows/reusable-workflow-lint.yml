name: Lint GitHub Actions workflows
on:
    workflow_call:

permissions: {}

jobs:
    # Runs the actionlint GitHub Action workflow file linter.
    #
    # This helps guard against common mistakes including strong type checking for expressions (${{ }}), security checks,
    # `run:` script checking, glob syntax validation, and more.
    #
    # Performs the following steps:
    # - Checks out the repository.
    # - Runs actionlint.
    actionlint:
        name: Run actionlint
        runs-on: ubuntu-24.04
        permissions:
            contents: read
        timeout-minutes: 5
        steps:
            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  persist-credentials: false
                  show-progress: ${{ runner.debug == '1' && 'true' || 'false' }}

            # actionlint is static checker for GitHub Actions workflow files.
            # See https://github.com/rhysd/actionlint.
            - name: Run actionlint
              uses: docker://rhysd/actionlint:1.7.7
              with:
                  args: "-color -verbose"

    octoscan:
        name: Octoscan
        runs-on: ubuntu-latest
        permissions:
            security-events: write
            actions: read
            contents: read
        timeout-minutes: 10
        steps:
            - name: Checkout code
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  persist-credentials: false

            - name: Run octoscan
              id: octoscan
              uses: synacktiv/action-octoscan@6b1cf2343893dfb9e5f75652388bd2dc83f456b0 # v1.0.0
              with:
                  filter_triggers: ''

            - name: Upload SARIF file
              uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
              with:
                  sarif_file: ${{steps.octoscan.outputs.sarif_output}}
                  category: octoscan

    zizmor:
        name: Zizmor
        runs-on: ubuntu-latest
        permissions:
            security-events: write
            actions: read
            contents: read
        steps:
            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  persist-credentials: false

            - name: Install the latest version of uv
              uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5.2.1

            # https://github.com/woodruffw/zizmor
            - name: Run zizmor
              run: uvx zizmor@1.3.1 --format sarif . > results.sarif
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload SARIF file
              uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
              with:
                  sarif_file: results.sarif
                  category: zizmor

    poutine:
        name: Poutine
        runs-on: ubuntu-latest
        permissions:
            security-events: write
            contents: read
        steps:
        - name: Checkout repository
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
          with:
              persist-credentials: false

        - name: Run Poutine
          uses: boostsecurityio/poutine-action@84c0a0d32e8d57ae12651222be1eb15351429228 # v0.15.2

        - name: Upload SARIF file
          uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
          with:
              sarif_file: results.sarif
              category: poutine
